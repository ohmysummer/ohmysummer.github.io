<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Async on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/async/</link>
    <description>Recent content in Async on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 06 Jul 2018 21:14:56 +0800</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/async/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proc Async</title>
      <link>https://ohmysummer.github.io/post/2018-07-06-proc-async/</link>
      <pubDate>Fri, 06 Jul 2018 21:14:56 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-07-06-proc-async/</guid>
      <description>class Proc::Async {} 注意: 目前只有 Rakudo 的 MoarVM 后端实现了 [Proc::Async](https://docs.raku.org/type/Proc::Async)。
Proc::Async 允许你异步地运行外部命令, 捕获标准输出和错误句柄，并可选择地写入到它的标准输入中。
my $file = &#39;foo&#39;.IO; spurt $file, &amp;quot;and\nCamelia\n♡\nme\n&amp;quot;; my $proc = Proc::Async.new: :w, &#39;tac&#39;, &#39;--&#39;, $file, &#39;-&#39;; # my $proc = Proc::Async.new: :w, &#39;sleep&#39;, 15; # uncomment to try timeouts react { whenever $proc.stdout.lines { # split input on \r\n, \n, and \r say &#39;lines: &#39;, $_ } whenever $proc.stderr { say &#39;stderr: &#39;, $_ } whenever $proc.ready { say &#39;PID: &#39;, $_ # Only in Rakudo 2018.</description>
    </item>
    
  </channel>
</rss>