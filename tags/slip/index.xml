<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slip on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/slip/</link>
    <description>Recent content in Slip on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 06 May 2018 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/slip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Slip</title>
      <link>https://ohmysummer.github.io/post/2018-05-06-slip/</link>
      <pubDate>Sun, 06 May 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-05-06-slip/</guid>
      <description>有时您想要将列表的元素插入到另一个列表中。这可以通过称为 Slip 的特殊类型的列表完成。
say (1, (2, 3), 4) eqv (1, 2, 3, 4); # OUTPUT: «False␤» say (1, Slip.new(2, 3), 4) eqv (1, 2, 3, 4); # OUTPUT: «True␤» say (1, slip(2, 3), 4) eqv (1, 2, 3, 4); # OUTPUT: «True␤»  另一种方法是使用 | 前缀运算符。请注意，这比逗号的优先级更高，因此它只影响单个值，但与上述选项不同，它会打破标量。
say (1, |(2, 3), 4) eqv (1, 2, 3, 4); # OUTPUT: «True␤» say (1, |$(2, 3), 4) eqv (1, 2, 3, 4); # OUTPUT: «True␤» say (1, slip($(2, 3)), 4) eqv (1, 2, 3, 4); # OUTPUT: «False␤»  Slip class Slip is List {}  Slip 是一个 List，自动展平到一个外部列表（或其他类似列表的容器或 iterable）中。</description>
    </item>
    
    <item>
      <title>stackoverflowWeekly1014</title>
      <link>https://ohmysummer.github.io/post/2016-10-14-stackoverflowweekly1014/</link>
      <pubDate>Fri, 14 Oct 2016 15:09:54 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-10-14-stackoverflowweekly1014/</guid>
      <description>Raku List Concatenation without Slip Raku List Concatenation without Slip 在 Perl 5 中 , 操作符用来连接列表; 然而在 Raku 中需要使用 | 操作符, 即 slip 操作符。
my @a = &amp;lt;a b c&amp;gt;; my @b = &amp;lt;d e f&amp;gt;; my @ab = |@a, |@b;  有比这短点的写法吗？
 答案  你可以使用 「flat」sub:
my @a = &amp;lt;a b c&amp;gt;; my @b = &amp;lt;d e f&amp;gt;; my @ab = flat @a, @b; say @ab.perl; #&amp;gt; [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;e&amp;quot;, &amp;quot;f&amp;quot;] my @abf = (@a, @b).</description>
    </item>
    
    <item>
      <title>Slip一例</title>
      <link>https://ohmysummer.github.io/post/2015-05-19-slip%E4%B8%80%E4%BE%8B/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-05-19-slip%E4%B8%80%E4%BE%8B/</guid>
      <description> 描述 有 7 块板子放在一个&amp;rdquo;袋子&amp;rdquo;中, 随机从袋子中移除一个板子展示到玩家面前直到袋子变空。当袋子变空时, 它会被重新装填, 如果需要额外的板子, 则重复前面那个过程。
输出 使用随机 bag 系统随机输出 50 块板子。
板子如下:
 O I S Z L J T  输出样本  LJOZISTTLOSZIJOSTJZILLTZISJOOJSIZLTZISOJTLIOJLTSZO OTJZSILILTZJOSOSIZTJLITZOJLSLZISTOJZTSIOJLZOSILJTS ITJLZOSILJZSOTTJLOSIZIOLTZSJOLSJZITOZTLJISTLSZOIJO  在 Raku 中我会这样写 (smls):
say (|&amp;lt;O I S Z L J T&amp;gt;.pick(*) xx *).[^50].join;  注意:
 | 操作符把每次迭代的项展开进外部的列表中, 以使你不必在结果上显式地调用 .flat 方法 使用 &amp;lt; &amp;gt; 字符串列表字面量看起来比在字符串字面量上使用 .comb 方法更合适 xx 操作符每次都会重新计算它左侧的表达式  </description>
    </item>
    
  </channel>
</rss>