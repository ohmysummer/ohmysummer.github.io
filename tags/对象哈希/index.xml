<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>对象哈希 on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/%E5%AF%B9%E8%B1%A1%E5%93%88%E5%B8%8C/</link>
    <description>Recent content in 对象哈希 on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 18 Sep 2016 22:56:16 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/%E5%AF%B9%E8%B1%A1%E5%93%88%E5%B8%8C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>对象哈希</title>
      <link>https://ohmysummer.github.io/post/2016-09-18-raku-calendar-2016-%E7%AC%AC%E4%B8%89%E5%A4%A9%E5%AF%B9%E8%B1%A1%E5%93%88%E5%B8%8C/</link>
      <pubDate>Sun, 18 Sep 2016 22:56:16 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-09-18-raku-calendar-2016-%E7%AC%AC%E4%B8%89%E5%A4%A9%E5%AF%B9%E8%B1%A1%E5%93%88%E5%B8%8C/</guid>
      <description>第三天　－　对象哈希
Raku 添加对象散列, 其键并不仅仅是字符串。这些键是值和类型的结合。这意味着对象可以被字符串化为同样的东西但是它们可以是不同的键。
普通的哈希构造：
use v6; my Int $int = 4; my Str $str = &amp;quot;4&amp;quot;; my IntStr $int_str = &amp;lt;4&amp;gt;; # Allomorph my %hash; %hash{$int} = &#39;Plain old number&#39;; %hash{$str} = &#39;String of digits&#39;; %hash{$int_str} = &#39;Dualvar&#39;; say &amp;quot;There are &amp;quot;, %hash.elems, &amp;quot; elements in the hash&amp;quot;; # this calls the .gist method, sorta like a dumper routine %hash.say;  结果显示该哈希中只有一个元素并且这个元素是我最后添加的那个：
There are 1 elements in the hash {4 =&amp;gt; Dualvar}  但是我也可以通过告诉哈希我想要它接受的对象来声明一个对象哈希（Object hash）。我可以使用　Any 对象来允许哈希接受任何东西：</description>
    </item>
    
  </channel>
</rss>