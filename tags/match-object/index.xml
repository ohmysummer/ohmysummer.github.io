<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Match Object on 焉知非鱼</title>
    <link>http://ohmysummer.github.io/tags/match-object/</link>
    <description>Recent content in Match Object on 焉知非鱼</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ohmysummer.github.io/tags/match-object/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在Perl6中创建Grammar</title>
      <link>http://ohmysummer.github.io/post/2016-05-14-%E5%A6%82%E4%BD%95%E5%9C%A8perl6%E4%B8%AD%E5%88%9B%E5%BB%BAgrammar/</link>
      <pubDate>Sat, 14 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2016-05-14-%E5%A6%82%E4%BD%95%E5%9C%A8perl6%E4%B8%AD%E5%88%9B%E5%BB%BAgrammar/</guid>
      <description>检查 module 的名字是否 遵循 Perl 6 的命名规范。模块的名字可以是使用 2 个冒号分割的标识符, 例如 File::Compare 。标识符必须以字母字符 (a-z) 或下划线开头， 后面跟着 0 个 或多个字母数字字符。但是并没有那么简单, 有些模块的名字只有一个标识符而没有冒号，例如 Bailador ， 而其它模块可能有多个标识符和 :: 组成。这看起来正符合 grammar 的胃口！
定义 grammar Perl 6 Grammars 是由 regexes 构建的。 我需要 2 个 regexes： 一个用于匹配标识符, 一个用于匹配双冒号分隔符。对于标识符 regex， 我使用：
&amp;lt;[A..Za..z_]&amp;gt; # begins with letter or underscore &amp;lt;[A..Za..z0..9]&amp;gt; ** 0..* # zero or more alpanumeric  Perl 6 中，字符类是使用 &amp;lt;[ ... ]&amp;gt; 来定义的， 范围是使用 范围操作符 .. 代替了短划线 -.</description>
    </item>
    
  </channel>
</rss>