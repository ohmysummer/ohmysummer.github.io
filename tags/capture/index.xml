<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Capture on Young For Perl 6</title>
    <link>https://ohmysummer.github.io/tags/capture/</link>
    <description>Recent content in Capture on Young For Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 Apr 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/capture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Capture</title>
      <link>https://ohmysummer.github.io/post/2015-04-01-capture/</link>
      <pubDate>Wed, 01 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-04-01-capture/</guid>
      <description>Capture 的定义:
class Capture does Positional does Associative { }  Capture 是一个用于给 code 对象传递参数的容器。Captures 是签名的另一面 — Captures 在调用方定义实参, 而签名(Signatures) 在被调用方定义形式参数。
当你调用 print $a, $b 时, $a, $b 这部分就是一个 Capture。$a, $b 在这儿是实参。
Captures 包含一个 list-like 部分的位置参数和一个 hash-like 部分的具名参数。对于具名参数, Captures 使用一种略微不同的语法而不是普通的 List。有两种简单的方法生成一个具名参数：
 使用一个未引起的键命名一个形参, 后面跟着 =&amp;gt;, 然后跟着参数 使用以形参命名的冒号对儿字面量  say unique 1, -2, 2, 3, as =&amp;gt; { abs $_ }; # 1, -2, 3 # ... is the same thing as: say unique 1, -2, 2, 3, :as({ abs $_ }); # 1, -2, 3 # Be careful not to quote the name of a named parameter: say unique 1, -2, 2, 3, &#39;as&#39; =&amp;gt; { abs $_ }; # 1, -2, 2, 3, &amp;quot;as&amp;quot; =&amp;gt; { .</description>
    </item>
    
  </channel>
</rss>