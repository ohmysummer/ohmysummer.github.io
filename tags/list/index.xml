<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>List on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/list/</link>
    <description>Recent content in List on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 10 Jun 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/list/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>class-List</title>
      <link>https://ohmysummer.github.io/post/2015-06-10-class-list/</link>
      <pubDate>Wed, 10 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-06-10-class-list/</guid>
      <description>my class List is Iterable does Positional { .. }  List 以序列化的方式存储 items并且潜在是惰性的。
默认列表和数组的索引从 0 开始。
你可以给列表中的元素赋值如果它们是容器的话。使用数组以使列表中的每个元素存储在容器中。
Items, Flattening and Sigils 在 Raku 中, 把 List 赋值给一个标量变量不会丢死信息。不同之处在于迭代通常会把标量中的列表(或其它任何像列表的东西, 例如 Parcel 和 数组)当作单个元素。
my @a = 1, 2, 3; for @a { } # 三次迭代  my $s = @a; for $s { } # 一次迭代 for @a.item { } # 一次迭代 for $s.list { } # 三次迭代  Lists 通常会插值(展开)除非它们通过一个 item(scalar)容器访问:(GLR 的影响？)</description>
    </item>
    
  </channel>
</rss>