<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Subst on Young For Perl 6</title>
    <link>https://ohmysummer.github.io/tags/subst/</link>
    <description>Recent content in Subst on Young For Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 05 Oct 2016 23:32:51 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/subst/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perl 6 中的 subst</title>
      <link>https://ohmysummer.github.io/post/2016-10-05-perl6%E4%B8%AD%E7%9A%84subst/</link>
      <pubDate>Wed, 05 Oct 2016 23:32:51 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-10-05-perl6%E4%B8%AD%E7%9A%84subst/</guid>
      <description>(Str) 方法 subst subst 取的是单词 substitution(替换)的前5个字符, 意为替换之意。
multi method subst(Str:D: $matcher, $replacement, *%opts)  返回被调用的那个字符串, 其中 $matcher 被 $replacement 给替换掉了(或者返回原来的字符串, 如果没有找到匹配的话)。
subst 有一个「就地」替换的句法变体, 它被拼写为 s/matcher/replacement/。
$matcher 可以是一个正则表达式, 或者一个字符串字面值。 Cool 类型的非字符串 matcher 会被强转为字符串以用于字面上的匹配。
my $some-string = &amp;quot;Some foo&amp;quot;; my $another-string = $some-string.subst(/foo/, &amp;quot;string&amp;quot;); # gives &#39;Some string&#39; $some-string.=subst(/foo/, &amp;quot;string&amp;quot;); # in-place substitution. $some-string is now &#39;Some string&#39;  replacement 可以是一个闭包:
my $i = 41; my $str = &amp;quot;The answer is secret.</description>
    </item>
    
  </channel>
</rss>