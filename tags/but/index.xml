<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>but on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/but/</link>
    <description>Recent content in but on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 Sep 2016 12:17:59 +0000</lastBuildDate><atom:link href="https://ohmysummer.github.io/tags/but/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I left my keys in a side-channel</title>
      <link>https://ohmysummer.github.io/post/2016-09-26-i-left-my-keys-in-a-side-channel/</link>
      <pubDate>Mon, 26 Sep 2016 12:17:59 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-09-26-i-left-my-keys-in-a-side-channel/</guid>
      <description>当我尝试把选项聚合到一个模块中时我无意中发现了一个常见问题的简洁解决办法。我想拥有一个子例程作为吞噬具名参数、做一些检查、并且要么返回 True 以满足那个 where 从句, 要么死掉并抛出一个合适的错误信息的 where 从句。 那很简单但是不彻底。那个 where 从句没有提供它所检查的参数的名字, 这需要拥有一个合适的错误信息。我们来简化下代码。</description>
    </item>
    
    <item>
      <title>扩展 Raku 中的类型</title>
      <link>https://ohmysummer.github.io/post/2015-11-25-%E6%89%A9%E5%B1%95raku%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Wed, 25 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-11-25-%E6%89%A9%E5%B1%95raku%E4%B8%AD%E7%9A%84%E7%B1%BB%E5%9E%8B/</guid>
      <description>扩展 Raku 中的类型 使用继承 class BetterInt is Int {method even { self %% 2 }}my BetterInt $x .</description>
    </item>
    
  </channel>
</rss>
