<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feed Bottom to Top on 焉知非鱼</title>
    <link>http://ohmysummer.github.io/tags/feed-bottom-to-top/</link>
    <description>Recent content in Feed Bottom to Top on 焉知非鱼</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Sep 2016 22:56:16 +0000</lastBuildDate>
    
	<atom:link href="http://ohmysummer.github.io/tags/feed-bottom-to-top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>feed 操作符</title>
      <link>http://ohmysummer.github.io/post/2016-09-18-feed%E6%93%8D%E4%BD%9C%E7%AC%A6/</link>
      <pubDate>Sun, 18 Sep 2016 22:56:16 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2016-09-18-feed%E6%93%8D%E4%BD%9C%E7%AC%A6/</guid>
      <description>Sequencer Precedence
infix ==&amp;gt; 这个流操作符(feed operator)从它的左侧接收结果并把结果作为最后一个参数传递给下一个(右侧的)例程(routine)。
这个操作符的优先级很松散所以你需要使用圆括号把结果赋值给其它变量, 或者你甚至可以使用另外一个流操作符! 在接收单个参数或第一个参数为 block 的程序/方法的例子中, 你必须经常使用圆括号来调用(尽管这对于最后一个例程/方法不是必须的)。
# Traditional structure, read bottom-to-top my @result = sort # (4) Sort, result is &amp;lt;Earth People&amp;gt; grep { /&amp;lt;[PE]&amp;gt;/ }, # (3) Look for P or E map { .tc }, # (2) Capitalize the words &amp;lt;people of earth&amp;gt;; # (1) Start with the input # Feed (left-to-right) with parentheses, read top-to-bottom @result = ( &amp;lt;people of earth&amp;gt; # (1) Start with the input ==&amp;gt; map({ .</description>
    </item>
    
  </channel>
</rss>