<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Smileys on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/smileys/</link>
    <description>Recent content in Smileys on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 11 Mar 2017 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/smileys/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku 中的笑脸</title>
      <link>https://ohmysummer.github.io/post/2017-03-11-raku%E4%B8%AD%E7%9A%84%E7%AC%91%E8%84%B8/</link>
      <pubDate>Sat, 11 Mar 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-03-11-raku%E4%B8%AD%E7%9A%84%E7%AC%91%E8%84%B8/</guid>
      <description>在 Raku 中在调用者的类型身上使用 :D 或 :U 类型笑脸来制造 type/instance 方法:
class Foo { multi method foo (Foo:D:) { say &amp;quot;instance&amp;quot; } multi method foo (Foo:U:) { say &amp;quot;type object&amp;quot; } } Foo .foo; # 输出 type object Foo.new.foo; # 输出 instance # Can use compile time vars to aovid re-typing the actual name everywhere: class Bar { multi method foo (::?CLASS:D:) { say &amp;quot;instance&amp;quot; } multi method foo (::?CLASS:U:) { say &amp;quot;type object&amp;quot; } } Bar .</description>
    </item>
    
  </channel>
</rss>