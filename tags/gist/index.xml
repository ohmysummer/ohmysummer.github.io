<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gist on 焉知非鱼</title>
    <link>http://ohmysummer.github.io/tags/gist/</link>
    <description>Recent content in Gist on 焉知非鱼</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Apr 2018 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="http://ohmysummer.github.io/tags/gist/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perl 6 中的 gist 方法</title>
      <link>http://ohmysummer.github.io/post/2018-04-10-what-does-gist-do-in-perl-6/</link>
      <pubDate>Tue, 10 Apr 2018 10:54:24 +0200</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2018-04-10-what-does-gist-do-in-perl-6/</guid>
      <description>当你打印对象的时候, 例如 say $x, Perl 6 调用 gist 方法. 这个方法是为所有内建类型定义的：对于其中一些类型，它调用 Str 方法，对于某些类型它调用 perl 方法，对于某些类型，它使字符串表示有所不同。
让我们看看如何使用该方法来创建您自己的变体：
class X { has $.value; method gist { &#39;[&#39; ~ $!value ~ &#39;]&#39; } } my $x = X.new(value =&amp;gt; 42); say $x; # [42] $x.say; # [42]  当你调用 say 时，该程序在方括号中打印一个数字：[42]。
请注意，双引号字符串中的插值使用 Str，而不是 gist。你可以在这里看到它：
say $x.Str; # X&amp;lt;140586830040512&amp;gt; say &amp;quot;$x&amp;quot;; # X&amp;lt;140586830040512&amp;gt;  如果您需要自定义插值，请重新定义 Str 方法:
class X { has $.value; method gist { &#39;[&#39; ~ $!</description>
    </item>
    
  </channel>
</rss>