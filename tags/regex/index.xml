<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Regex on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/regex/</link>
    <description>Recent content in Regex on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 18 Mar 2017 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Regexes</title>
      <link>https://ohmysummer.github.io/post/2017-03-18-regexes/</link>
      <pubDate>Sat, 18 Mar 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-03-18-regexes/</guid>
      <description>正则表达式, 简称 regexes, 是描述文本模式的字符序列。模式匹配就是将这些模式和实际的文本进行匹配的过程。
词法约定 Perl 6 正则表达式有特殊的写法:
m/abc/; # a regex that is immediately matched against $_ rx/abc/; # a Regex object /abc/; # a Regex object  对于前两个例子, 分隔符还能用除了斜线之外的其它字符:
m{abc}; rx{abc};  注意, 冒号和圆括号都不能用作分隔符; 禁止使用冒号作为正则表达式分割符是因为它和副词冲突, 例如 rx:i/abc/(忽略大小写的正则表达式), 而圆括号表明函数调用。
空白符在正则表达式中通常被忽略(带有 :s 或 :sigspace 副词的正则表达式除外)。
通常, 对于 Perl 6 来说, 正则表达式中的注释以 # 号开头, 直至行尾。
字面值 正则表达式最简单的情况是匹配字符串字面值。
if &#39;properly&#39; ~~ m/ perl / { say &amp;quot;&#39;properly&#39; contains &#39;perl&#39;&amp;quot;; }  字母数字和下划线 _ 按字面值匹配。所有其它字符要么使用反斜线转义(例如, \: 匹配一个冒号), 要么用引号引起来:</description>
    </item>
    
  </channel>
</rss>