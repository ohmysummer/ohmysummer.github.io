<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flat on 焉知非鱼</title>
    <link>http://ohmysummer.github.io/tags/flat/</link>
    <description>Recent content in Flat on 焉知非鱼</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Jan 2017 22:56:16 +0000</lastBuildDate>
    
	<atom:link href="http://ohmysummer.github.io/tags/flat/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2017 StackOverFlow-sort,deepmap,flat</title>
      <link>http://ohmysummer.github.io/post/2017-01-02-stackoverflow/</link>
      <pubDate>Mon, 02 Jan 2017 22:56:16 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2017-01-02-stackoverflow/</guid>
      <description>perl6 What is the best way to match any of a group of words?  我想匹配任意一组单词，但是失败了，请问怎样才能正确地匹配到？
my @a=&amp;lt;a b c d e f&amp;gt;; my $x=&amp;quot;a1234567&amp;quot;; say $x ~~ m/ @a.any /;  Answer
my @a = &amp;lt;a b c d e f&amp;gt;; my $x = &amp;quot;a1234567&amp;quot;; say $x ~~ /@a/  /@a/ 和 /| @a/ 相同，它是最长的备选分支。对于备选分支，你可以使用 /|| @a/。
 How to build lazy lists with defined generators and is there a “takeWhile” alternative?</description>
    </item>
    
    <item>
      <title>2017 StackOverFlow-sort,deepmap,flat</title>
      <link>http://ohmysummer.github.io/post/2017-01-02-stackoverflow/</link>
      <pubDate>Mon, 02 Jan 2017 22:56:16 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2017-01-02-stackoverflow/</guid>
      <description>perl6 What is the best way to match any of a group of words?  我想匹配任意一组单词，但是失败了，请问怎样才能正确地匹配到？
my @a=&amp;lt;a b c d e f&amp;gt;; my $x=&amp;quot;a1234567&amp;quot;; say $x ~~ m/ @a.any /;  Answer
my @a = &amp;lt;a b c d e f&amp;gt;; my $x = &amp;quot;a1234567&amp;quot;; say $x ~~ /@a/  /@a/ 和 /| @a/ 相同，它是最长的备选分支。对于备选分支，你可以使用 /|| @a/。
 How to build lazy lists with defined generators and is there a “takeWhile” alternative?</description>
    </item>
    
    <item>
      <title>S07-Lists</title>
      <link>http://ohmysummer.github.io/post/2016-02-12-s07-lists/</link>
      <pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2016-02-12-s07-lists/</guid>
      <description>push 和 append 的表现不同, push 一次只添加单个参数到列表末端, append 一次可以添加多个参数。
use v6; my @d = ( [ 1 .. 3 ] ); @d.push( [ 4 .. 6 ] ); @d.push( [ 7 .. 9 ] ); for @d -&amp;gt; $r { say &amp;quot;$r[]&amp;quot;; } # 1 # 2 # 3 # 4 5 6 # 7 8 9 for @d -&amp;gt; $r { say $r.WHAT() } # (Int) # (Int) # (Int) # (Array) 整个数组作为单个参数 # (Array) say @d.</description>
    </item>
    
    <item>
      <title>stackoverflow0902</title>
      <link>http://ohmysummer.github.io/post/2015-12-18-stackoverflow0902/</link>
      <pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://ohmysummer.github.io/post/2015-12-18-stackoverflow0902/</guid>
      <description>How do I chain to an inline block in Perl 6?
我想修改一个数组(我在这个例子中使用了 splice, 但是它也可能是修改数组的任何操作)并返回修改后的数组 - 和 slice 不一样, slice 返回的是从数组中抠出的项。我可以很容易地通过在数组中存储一个 block 来做到, 就像下面这样:
my $1 = -&amp;gt; $a { splice($a,1,3,[1,2,3]); $a }; say (^6).map( { $_ &amp;lt; 4 ?? 0 !! $_ } ).Array; # [0 0 0 0 4 5] say (^6).map( { $_ &amp;lt; 4 ?? 0 !! $_ } ).Array.$1; # [0 1 2 3 4 5]  我怎么把由 $1 代表的 block 内联到单个表达式中呢？ 下面的解决方法不正确:</description>
    </item>
    
  </channel>
</rss>