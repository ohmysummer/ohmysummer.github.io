<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>When on Young For Perl 6</title>
    <link>https://ohmysummer.github.io/tags/when/</link>
    <description>Recent content in When on Young For Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 12 Apr 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/when/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>reddit编程题-詹妮的水果篮</title>
      <link>https://ohmysummer.github.io/post/2016-04-12-reddit%E7%BC%96%E7%A8%8B%E9%A2%98-%E8%A9%B9%E5%A6%AE%E7%9A%84%E6%B0%B4%E6%9E%9C%E7%AF%AE/</link>
      <pubDate>Tue, 12 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-04-12-reddit%E7%BC%96%E7%A8%8B%E9%A2%98-%E8%A9%B9%E5%A6%AE%E7%9A%84%E6%B0%B4%E6%9E%9C%E7%AF%AE/</guid>
      <description>问题描述 小詹妮拿着 5 美元去超市买东西, 为新搬来的邻居买水果篮礼物。因为她是个勤奋并缺乏想象力的孩纸, 她打算正好花 5 美元, 不多也不少。
事实上超市里水果的价格并非整数, 正好花光 5 美元并不容易。 - 但是詹妮已经准备好了。她从背包里拿出上网本, 输入她看到过的水果的单价, 并且开启了一个程序为她收集 — 就是这样, 5 美元能买的水果的组合就出现在屏幕上。
挑战 : 用你选择的语言展示詹妮的程序是什么样子。
 目标就是 500 美分 (等于 5 美元) 解决方法可以包含多种同类型的水果 - 假设它们数量没有限制 解决方法没有必要包含所有水果类型 对给定的输入检测所有可能的方法  输入描述 每行一种水果 — 规定了水果的名字(不含空格的单词)和水果的单价(单位为美分, 整数)
输出描述 每个解决方法一行 — 用以逗号分割的数量+名字对儿, 描述了那种类型要买的水果数。
不要列出数量为 0 的水果。 如果为复数就给名字加 s。
输入样本 banana 32 kiwi 41 mango 97 papaya 254 pineapple 399  输出样本 6 kiwis, 1 papaya 7 bananas, 2 kiwis, 2 mangos  有挑战的输入 apple 59 banana 32 coconut 155 grapefruit 128 jackfruit 1100 kiwi 41 lemon 70 mango 97 orange 73 papaya 254 pear 37 pineapple 399 watermelon 500  注意, 这种输入有 180 种解决方法。</description>
    </item>
    
    <item>
      <title>Perl 6 中的模式匹配</title>
      <link>https://ohmysummer.github.io/post/2016-03-09-perl6%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Wed, 09 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-03-09-perl6%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D/</guid>
      <description>模式匹配 my $name = &amp;quot;twostraws&amp;quot;; given $name { when &amp;quot;bilbo&amp;quot; { say &amp;quot;Hello, Bilbo Baggins!&amp;quot;} when &amp;quot;twostraws&amp;quot; { say &amp;quot;Hello, Paul Hudson!&amp;quot; } default { say &amp;quot;身份验证失败&amp;quot; } }  同时检查名字和密码 my $name = &amp;quot;twostraws&amp;quot;; my $password = &amp;quot;fr0st1es&amp;quot;; given ($name, $password) { when (&amp;quot;bilbo&amp;quot;, &amp;quot;bagg1n5&amp;quot;) { say &amp;quot;Hello, Bilbo Baggins!&amp;quot; } when (&amp;quot;twostraws&amp;quot;, &amp;quot;fr0st1es&amp;quot;) { say &amp;quot;Hello, Paul Hudson!&amp;quot; } default { say &amp;quot;你是谁?&amp;quot; } }  使用单个元组 my $authentication = (&amp;quot;twostraws&amp;quot;, &amp;quot;fr0st1es&amp;quot;); given $authentication { when (&amp;quot;bilbo&amp;quot;, &amp;quot;bagg1n5&amp;quot;) { say &amp;quot;Hello, Bilbo Baggins!</description>
    </item>
    
    <item>
      <title>When and Where</title>
      <link>https://ohmysummer.github.io/post/2015-03-15-when%E5%92%8Cwhere/</link>
      <pubDate>Sun, 15 Mar 2015 13:15:00 +0300</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-03-15-when%E5%92%8Cwhere/</guid>
      <description>When 可以用在主题化($_)的语句中 Perl 里面有个特殊的变量叫 $_, 即主题化变量, the variable in question.
&amp;gt; for (&#39;Swift&#39;, &#39;PHP&#39;, &#39;Python&#39;, &#39;Perl&#39;) -&amp;gt; $item { say $item when $item ~~ /^P/ } PHP Python Perl  &amp;gt; for (12, 24, 56, 42) {.say when *&amp;gt;40 } 56 42  而 where 用于对类型进行约束.
&amp;gt; for (&#39;Swift&#39;, &#39;PHP&#39;, &#39;Python&#39;, &#39;Perl&#39;, 42) -&amp;gt; $item where $item ~~ Str {say $item} Swift PHP Python Perl Constraint type check failed for parameter &#39;$item&#39;  未完待续.</description>
    </item>
    
  </channel>
</rss>