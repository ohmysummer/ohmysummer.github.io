<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quoting on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/quoting/</link>
    <description>Recent content in Quoting on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 09 Aug 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/quoting/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>引号结构</title>
      <link>https://ohmysummer.github.io/post/2016-08-09-%E5%BC%95%E5%8F%B7%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 09 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-08-09-%E5%BC%95%E5%8F%B7%E7%BB%93%E6%9E%84/</guid>
      <description>The Q Lang 在 Perl 6 中, 字符串通常使用一些引号结构来表示. 这些引号结构中,最简单的就是 Q, 通过便捷方式 ｢…｣ 或 Q 后跟着由任意一对儿分隔符包围着的文本. 大多数时候, 你需要的只是 &#39;…&#39; 或 &amp;quot;…&amp;quot;.
Literal strings: Q Q[A literal string] ｢More plainly.｣ Q ^Almost any non-word character can be a delimiter!^  分隔符能够嵌套, 但是在普通的 Q 形式中, 反斜线转义是不允许的. 换种说法就是, Q 字符串尽可能被作为字面量.
Q&amp;lt;Make sure you &amp;lt;match&amp;gt; opening and closing delimiters&amp;gt; Q{This is still a closing brace → \}  这些例子产生:
A literal string More plainly. Almost any non-word character can be a delimiter!</description>
    </item>
    
  </channel>
</rss>