<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Colonpairs on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/colonpairs/</link>
    <description>Recent content in Colonpairs on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 19 Jun 2018 19:38:05 +0800</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/colonpairs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku Colon Pair</title>
      <link>https://ohmysummer.github.io/post/2018-06-19-raku-colon-pair/</link>
      <pubDate>Tue, 19 Jun 2018 19:38:05 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-06-19-raku-colon-pair/</guid>
      <description>原文
如果我选择 Raku 编程语言中最普遍的构造，那肯定是 colonpair。哈希构造函数，命名参数和参数，副词和正则表达式修饰符 - 都涉及到 colonpair。毫不奇怪，在这样广阔的空间里，构建 colonpair 时会有很多捷径。
今天，我们将了解所有这些！这样做会让我们看到最简单的以及一些更高级的语言结构，所以如果本文的某些部分让你头脑发热，不要担心 - 你不必一次就知道所有的东西！
第一部分: 创建 Colonwhaaaa? Colonpair 的名字（通常）来自于 Pair 对象构造函数，并且（通常）里面有一个冒号。以下是一些 colonpairs 的例子：
:foo, :$bar, :meow&amp;lt;moo&amp;gt;, heh =&amp;gt; hah  最后一个没有冒号，但由于它和其他 colonpairs 基本上是一样的，我个人认为它也是一个 colonpair。
我们可以通过查看它们的 0 来看到这些 colonpairs 构成 Pair 对象：
say :foo.^name; # OUTPUT: «Pair␤»  但是，在参数列表中使用时，这些 colonpairs 被特殊处理了以表示命名参数。我们将在后面的文章中介绍这一部分。
简写 这里有一个完整的可用的 colonpair 列表，你可以在深入之前浏览一下。我知道，它看起来像一个巨大的列表，但这就是我们阅读这篇文章的原因 - 要了解构成这些排列的一般模式。
# 标准的, take-any-type, 非便捷形式 :nd(2).say; # OUTPUT: «nd =&amp;gt; 2␤» :foo(&#39;foo&#39;, &#39;bar&#39;).say; # OUTPUT: «foo =&amp;gt; (foo bar)␤» :foo( %(:42a, :foo&amp;lt;a b c&amp;gt;) ).</description>
    </item>
    
  </channel>
</rss>