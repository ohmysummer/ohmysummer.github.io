<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rakudo on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/rakudo/</link>
    <description>Recent content in Rakudo on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 29 Jan 2018 23:01:01 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/rakudo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku Rakudo 和 NQP 内部研讨(二)</title>
      <link>https://ohmysummer.github.io/post/2018-01-29-rakudo-%E5%92%8C-nqp-%E5%86%85%E9%83%A8%E7%A0%94%E8%AE%A8/</link>
      <pubDate>Mon, 29 Jan 2018 23:01:01 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-01-29-rakudo-%E5%92%8C-nqp-%E5%86%85%E9%83%A8%E7%A0%94%E8%AE%A8/</guid>
      <description>title: Rakudo and NQP Internals subtitle: The guts tormented implementers made author: Jonathan Worthington
课程概览 - 第二天 欢迎回来. 今天我们会涉及到如下话题:
 6model Bounded Serialization and Module Loading The regex and grammar engine The JVM backend The MoarVM backend  6model 对象系统的组成成分
什么是 6model? 6model 提供了一组用于构建类型和对象系统的原语.
Rakudo 的类, roles, 枚举和 subset 类型都由这些原语组装在一起. NQP 也是, 尽管 NQP 的对象系统更简单, 它仅仅提供了类和 roles.
这些原语已经在 Parrot 和 JVM 虚拟机上实现了. MoarVM 也提供了那些原语, 但是它走的更远, 它让 6model 成为 MoarVM 的对象系统.</description>
    </item>
    
  </channel>
</rss>