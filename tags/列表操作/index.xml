<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>列表操作 on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C/</link>
    <description>Recent content in 列表操作 on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 14 Jul 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku rotor--列表操作之王</title>
      <link>https://ohmysummer.github.io/post/2015-07-14-raku-rotor-%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C%E4%B9%8B%E7%8E%8B/</link>
      <pubDate>Tue, 14 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-07-14-raku-rotor-%E5%88%97%E8%A1%A8%E6%93%8D%E4%BD%9C%E4%B9%8B%E7%8E%8B/</guid>
      <description>Raku .rotor - The King of List Manipulation
对于 Raku 程序员, .rotor是一个强大的列表操作工具。
分段 最简单的, .rotor接收一个整数$number并把列表分成多个子列表, 每个子列表含有 $number 个元素:
say &amp;lt;a b c d e f g h&amp;gt;.rotor: 3# ((a b c) (d e f))我们有一个含有 8 个元素的列表, 我们在该列表上调用接收参数 3 的 .rotor方法, 它返回 2 个列表, 每个列表中含有 3 个元素。不包括原列表中的最后 2 个元素, 因为它们没有组成一个完整的3个元素的列表。然而它们可以被包含进来, 使用 :partial具名参数设置为 True:
say &amp;lt;a b c d e f g h&amp;gt;.rotor: 3, :partial# ((a b c) (d e f) (g h))say &amp;lt;a b c d e f g h&amp;gt;.</description>
    </item>
    
  </channel>
</rss>