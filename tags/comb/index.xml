<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Comb on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/comb/</link>
    <description>Recent content in Comb on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 07 Jul 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/comb/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku 中的梳子!</title>
      <link>https://ohmysummer.github.io/post/2016-07-07-raku%E4%B8%AD%E7%9A%84%E6%A2%B3%E5%AD%90/</link>
      <pubDate>Thu, 07 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-07-07-raku%E4%B8%AD%E7%9A%84%E6%A2%B3%E5%AD%90/</guid>
      <description>Raku 中的梳子! 在 Perl 5 中, 我很感激有这样两个便利的结构:
my @things = $text =~ /thing/g; my %things = $text =~ /(key)...(value)/g;  你拿出一小段可以预见的文本，并给它一个正则表达式，吼吼, 你得到了一个列表和散列，像变魔术一般！我们也可以在 Perl 6 中使用正则表达式，但是 comb 更适合做这个工作。
Plain &amp;lsquo;Ol Characters 你可以把 comb 用作子例程或方法。在它的最基本的形式中， comb 会把字符串分解为字符:
&#39;foobar moobar 駱駝道bar&#39;.comb.join(&#39;|&#39;).say; &#39;foobar moobar 駱駝道bar&#39;.comb(6).join(&#39;|&#39;).say; # OUTPUT: # f|o|o|b|a|r| |m|o|o|b|a|r| |駱|駝|道|b|a|r # foobar| mooba|r 駱駝道b|ar  不适用任何参数的 comb 你会得到各个单独的字符。给 comb 提供一个整数 $n, 那么你会得到长度至多为 $n 个字符的一个列表，并且如果没有剩下的字符不够的话，这个列表会接收较短的这个字符串。这个方法比使用正则表快了 30 倍。
Limits 你也可以为 comb 提供第二个整数参数，即 *limit*，来标示每个列表中最多含有 limit 个元素:</description>
    </item>
    
    <item>
      <title>comb - 操作字符串的利器</title>
      <link>https://ohmysummer.github.io/post/2016-02-03-comb-%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A9%E5%99%A8/</link>
      <pubDate>Wed, 03 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-02-03-comb-%E6%93%8D%E4%BD%9C%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A9%E5%99%A8/</guid>
      <description>comb - 操作字符串的利器
comb 子例程 comb 子例程的定义为：
multi sub comb(Regex $matcher, Str(Cool) $input, $limit = *) returns List:D multi method comb(Regex $matcher, $limit = *) returns List:D  用法：
comb /PATTERN/, STRING, LIMIT? # 子例程形式 STRING.comb(/PATTERN/, LIMIT?) # 方法形式  返回调用者（方法形式）的所有（或者至多 $limit 个，如果提供了的话）匹配，或者返回第二个参数（sub 形式）与 Regex 相匹配的字符串列表。
say &amp;quot;6 or 12&amp;quot;.comb(/\d+/).join(&amp;quot;, &amp;quot;); # 6, 12  Str 类中的 comb multi sub comb(Str:D $matcher, Str:D $input, $limit = Inf) multi sub comb(Regex:D $matcher, Str:D $input, $limit = Inf, Bool :$match) multi sub comb(Int:D $size, Str:D $input, $limit = Inf) multi method comb(Str:D $input:) multi method comb(Str:D $input: Str:D $matcher, $limit = Inf) multi method comb(Str:D $input: Regex:D $matcher, $limit = Inf, Bool :$match) multi method comb(Str:D $input: Int:D $size, $limit = Inf)  在 $input 中搜索 $matcher 并返回所有匹配（默认是 Str，或者是 Match 对象，如果 $match 为真的话）的一个列表。$limit 表示至多返回 $limit 个匹配。</description>
    </item>
    
  </channel>
</rss>