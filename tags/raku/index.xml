<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raku on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/raku/</link>
    <description>Recent content in Raku on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 30 Jun 2020 13:33:26 +0800</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/raku/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数列</title>
      <link>https://ohmysummer.github.io/post/2020-06-30-sequence/</link>
      <pubDate>Tue, 30 Jun 2020 13:33:26 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2020-06-30-sequence/</guid>
      <description>斐波那契数列(Fibonacci sequence) lazy my \sequence = 1, 1, {$^a + $^b } .</description>
    </item>
    
    <item>
      <title>Parse with Raku Regexes and Grammars</title>
      <link>https://ohmysummer.github.io/post/2019-07-31-parse-with-raku-regexes-and-grammars/</link>
      <pubDate>Wed, 31 Jul 2019 20:22:08 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-07-31-parse-with-raku-regexes-and-grammars/</guid>
      <description>启动翻译。</description>
    </item>
    
    <item>
      <title>Encode-Decode</title>
      <link>https://ohmysummer.github.io/post/2019-07-16-encode-decode/</link>
      <pubDate>Tue, 16 Jul 2019 18:56:48 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-07-16-encode-decode/</guid>
      <description>http://blogs.perl.org/users/damian_conway/2019/07/vigenere-vs-vigenere.html</description>
    </item>
    
    <item>
      <title>Raku 中的 奇偶排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-29-odd-even-sort-in-raku/</link>
      <pubDate>Sat, 29 Jun 2019 19:37:39 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-29-odd-even-sort-in-raku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Raku 中的煎饼排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-27-pancake-sort-in-raku/</link>
      <pubDate>Sat, 29 Jun 2019 19:36:02 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-27-pancake-sort-in-raku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Raku 中的 Gnome sort</title>
      <link>https://ohmysummer.github.io/post/2019-06-28-gnome-sort-in-raku/</link>
      <pubDate>Fri, 28 Jun 2019 19:37:18 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-28-gnome-sort-in-raku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Raku 中的 Stooge Sort</title>
      <link>https://ohmysummer.github.io/post/2019-06-26-stooge-sort-in-raku/</link>
      <pubDate>Wed, 26 Jun 2019 19:35:43 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-26-stooge-sort-in-raku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Raku 中的合并排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-25-merge-sort-in-raku/</link>
      <pubDate>Tue, 25 Jun 2019 19:35:08 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-25-merge-sort-in-raku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Raku 中的插入排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-24-insertion-sort-in-raku/</link>
      <pubDate>Mon, 24 Jun 2019 19:19:06 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-24-insertion-sort-in-raku/</guid>
      <description>今天，我们研究插入排序算法及其在 Raku 中的可能实现。算法的复杂性是 O(n2)，但它是练习 Raku 的一个很好的选择。</description>
    </item>
    
    <item>
      <title>Raku 中的快速排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-23-quick-sort-in-raku/</link>
      <pubDate>Sun, 23 Jun 2019 19:16:15 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-23-quick-sort-in-raku/</guid>
      <description>今天，我们来看看另一个，也许是最着名的数据排序方法，快速排序。</description>
    </item>
    
    <item>
      <title>Raku 中的冒泡排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-22-bubble-sort-in-raku/</link>
      <pubDate>Sat, 22 Jun 2019 10:59:47 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-22-bubble-sort-in-raku/</guid>
      <description>嘿大家好，让我们在 Raku 中实现一些算法。</description>
    </item>
    
    <item>
      <title>Raku 中的选择排序</title>
      <link>https://ohmysummer.github.io/post/2019-06-21-selection-sort-in-raku/</link>
      <pubDate>Fri, 21 Jun 2019 16:26:46 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-21-selection-sort-in-raku/</guid>
      <description>sub find-smallest(@arr) { my $smallest = @arr[0]; my $smallest_index = 0; for @arr.</description>
    </item>
    
    <item>
      <title>Raku 实现二分查找</title>
      <link>https://ohmysummer.github.io/post/2019-06-01-binary-search-in-raku/</link>
      <pubDate>Sat, 01 Jun 2019 14:09:49 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-06-01-binary-search-in-raku/</guid>
      <description>sub binary_search(@list, $item) { my $low = 0; # low 和 high 用于跟踪要在其中查找的列表部分 my $high = @list.</description>
    </item>
    
    <item>
      <title>Raku Colonoscopy</title>
      <link>https://ohmysummer.github.io/post/2019-03-26-perl6-colonoscopy/</link>
      <pubDate>Tue, 26 Mar 2019 09:33:08 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-03-26-perl6-colonoscopy/</guid>
      <description>Raku Colonoscopy I promise, this will not hurt.</description>
    </item>
    
    <item>
      <title>Perl 5 to Raku guide - special variables</title>
      <link>https://ohmysummer.github.io/post/2019-02-24-special-variables/</link>
      <pubDate>Mon, 25 Feb 2019 13:33:26 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-02-24-special-variables/</guid>
      <description>描述 一个（希望）全面的 Perl 5 特殊变量列表及其 Raku 等价物，并在必要时记录它们之间的变化。</description>
    </item>
    
    <item>
      <title>Python to Raku - nutshell</title>
      <link>https://ohmysummer.github.io/post/2019-02-25-python-to-raku-nutshell/</link>
      <pubDate>Mon, 25 Feb 2019 09:41:35 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2019-02-25-python-to-raku-nutshell/</guid>
      <description>此页面试图为来自 Python 背景的人们提供学习 Raku 的方法。我们在 Raku 中讨论了许多 Python 构造和惯用法的等价语法。</description>
    </item>
    
    <item>
      <title>How Naming of Variables Works in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-09-28-how-naming-of-variables-works-in-raku/</link>
      <pubDate>Fri, 28 Sep 2018 20:18:30 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-09-28-how-naming-of-variables-works-in-raku/</guid>
      <description>在本系列的第 5 篇文章中，比较 Perl 5 和 Raku，了解在 Raku 中使用 sigils。</description>
    </item>
    
    <item>
      <title>Command Line Arguments in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-08-07-command-line-arguments-in-raku/</link>
      <pubDate>Tue, 07 Aug 2018 19:54:26 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-08-07-command-line-arguments-in-raku/</guid>
      <description>MAIN 子例程 命名参数和位置参数  命名参数 位置参数 Multi dispatch 组合命名参数和位置参数   可选参数和必选参数 别名或备用命名参数 USAGE 子例程  Sub MAIN 在 Raku 中，命令行参数的解析是使用 MAIN 子例程完成的，MAIN 子例程是一个特殊的子例程，它根据签名解析命令行参数。与其他子程序一样，您可以使用命名参数和位置参数，可选（和必需）参数，multiple dispatch 等。 通过定义 MAIN 子例程，编译器会自动生成 USAGE 子例程。可以修改此子例程以返回自定义的 usage 信息。所有的命令行参数也可以在特殊变量 @*ARGS 中使用，它可以在 MAIN 处理之前进行更改。</description>
    </item>
    
    <item>
      <title>我为什么学习Raku</title>
      <link>https://ohmysummer.github.io/post/2018-07-07-%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AD%A6%E4%B9%A0raku/</link>
      <pubDate>Fri, 06 Jul 2018 00:27:08 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-07-07-%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E5%AD%A6%E4%B9%A0raku/</guid>
      <description>http://www.evanmiller.org/why-im-learning-perl-6.html</description>
    </item>
    
    <item>
      <title>Raku 概览</title>
      <link>https://ohmysummer.github.io/post/2018-07-06-raku%E6%A6%82%E8%A7%88/</link>
      <pubDate>Fri, 06 Jul 2018 00:23:57 +0800</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-07-06-raku%E6%A6%82%E8%A7%88/</guid>
      <description>http://www.evanmiller.org/a-review-of-perl-6.html</description>
    </item>
    
    <item>
      <title>饭否客户端</title>
      <link>https://ohmysummer.github.io/post/2018-05-10-%E9%A5%AD%E5%90%A6%E5%AE%A2%E6%88%B7%E7%AB%AF/</link>
      <pubDate>Thu, 10 May 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-05-10-%E9%A5%AD%E5%90%A6%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid>
      <description>Inspired by fanfou-py</description>
    </item>
    
    <item>
      <title>Awesome Async Interfaces with Raku</title>
      <link>https://ohmysummer.github.io/post/2018-04-27-raku%E4%B8%AD%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%8F%B9%E7%9A%84%E5%BC%82%E6%AD%A5%E6%8E%A5%E5%8F%A3/</link>
      <pubDate>Thu, 26 Apr 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-04-27-raku%E4%B8%AD%E4%BB%A4%E4%BA%BA%E6%83%8A%E5%8F%B9%E7%9A%84%E5%BC%82%E6%AD%A5%E6%8E%A5%E5%8F%A3/</guid>
      <description>2015 年圣诞节前后, 我写了我的第一个 Raku 程序 - 新年 IRC 派对机器人。这项工作包括发布了 IRC::Client 模块。我从这个语言中找到了童年的乐趣并且在假期喝了不少酒, 结果就是这个模块最终足够疯狂。</description>
    </item>
    
    <item>
      <title> More on the proto keyword in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-02-21-more-on-the-proto-keyword-in-raku/</link>
      <pubDate>Wed, 21 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-21-more-on-the-proto-keyword-in-raku/</guid>
      <description>在深入研究 EVAL 子例程的细节之前，我们必须揭示一些关于 protos 原型和多重分派的更多信息。检查以下程序：</description>
    </item>
    
    <item>
      <title>Examining the Real role of Raku, part 2</title>
      <link>https://ohmysummer.github.io/post/2018-02-18-examining-the-real-role-of-raku-part-2/</link>
      <pubDate>Sun, 18 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-18-examining-the-real-role-of-raku-part-2/</guid>
      <description>今天，我们继续对几天前开始的 Real 角色进行初步探索。</description>
    </item>
    
    <item>
      <title>Everyone Loves Porgs</title>
      <link>https://ohmysummer.github.io/post/2018-02-17-everyone-loves-porgs/</link>
      <pubDate>Sat, 17 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-17-everyone-loves-porgs/</guid>
      <description>这个想法有一阵子了。我在完成的各个阶段都有几个发文的想法，有时候很难优先考虑这个问题。所以我想我要开始发布我一直在玩的更短的想法和事情，以免这个博客变成那些永不更新的博客之一。所以，我们开始吧。</description>
    </item>
    
    <item>
      <title>A word on polymod in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-02-16-a-word-on-polymod-in-raku/</link>
      <pubDate>Fri, 16 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-16-a-word-on-polymod-in-raku/</guid>
      <description>在转到 Real 角色的第二部分之前，让我们停下来研究一下 Int 类的中的 polymod 方法。</description>
    </item>
    
    <item>
      <title>如何在 Raku 中对散列进行排序</title>
      <link>https://ohmysummer.github.io/post/2018-02-16-%E5%A6%82%E4%BD%95%E5%9C%A8raku%E4%B8%AD%E5%AF%B9%E6%95%A3%E5%88%97%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Fri, 16 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-16-%E5%A6%82%E4%BD%95%E5%9C%A8raku%E4%B8%AD%E5%AF%B9%E6%95%A3%E5%88%97%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F/</guid>
      <description>要在 Raku 中对散列进行排序，首先你要知道什么是占位符变量。一旦这个概念变得清晰，对散列排序就变得非常简单。</description>
    </item>
    
    <item>
      <title>Examining the Real role of Raku, part 1</title>
      <link>https://ohmysummer.github.io/post/2018-02-15-examining-the-real-role-of-perl-6-part-1/</link>
      <pubDate>Thu, 15 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-15-examining-the-real-role-of-perl-6-part-1/</guid>
      <description>在过去的几天里，我们谈了很多关于 Real 这个角色。让我们更仔细地看看它。该代码位于 src/core/Real.</description>
    </item>
    
    <item>
      <title>FatRat vs Rat in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-02-15-fatrat-vs-rat-in-raku/</link>
      <pubDate>Thu, 15 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-15-fatrat-vs-rat-in-raku/</guid>
      <description>昨天，Solomon Foster 在 Facebook 的 Raku 小组上发布了一个例子:</description>
    </item>
    
    <item>
      <title>A bit more on Rat vs FatRat in Raku</title>
      <link>https://ohmysummer.github.io/post/2018-02-14-a-bit-more-on-rat-vs-fatrat-in-perl-6/</link>
      <pubDate>Wed, 14 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-14-a-bit-more-on-rat-vs-fatrat-in-perl-6/</guid>
      <description>昨天，我们正在深入研究 Rakudo Raku，以了解Rat值成为Num值的时间。事实证明，如果该值变得太小，这意味着它的分母变得越来越大，Rakudo开始使用Num值而不是Rat。</description>
    </item>
    
    <item>
      <title>Going over the Bridge, part 2. Let’s get rid of it</title>
      <link>https://ohmysummer.github.io/post/2018-02-12-going-over-the-bridge-part-2/</link>
      <pubDate>Mon, 12 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-12-going-over-the-bridge-part-2/</guid>
      <description>今天，我们继续在 Rakudo Raku 中使用 Bridge 方法。昨天，我们在几个预定义的数据类型中看到了方法的定义。现在是时候看看如何使用该方法。</description>
    </item>
    
    <item>
      <title>Going over the Bridge, part 1</title>
      <link>https://ohmysummer.github.io/post/2018-02-11-going-over-the-bridge-part-1/</link>
      <pubDate>Sun, 11 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-11-going-over-the-bridge-part-1/</guid>
      <description>在处理 Raku 中的数字的类中，我们看到了 Bridge 方法，该方法以多态方式使用。让我们花一些时间，并试图了解 1）它是如何工作的，2）是否有必要。</description>
    </item>
    
    <item>
      <title>Raku 中的命名参数</title>
      <link>https://ohmysummer.github.io/post/2018-02-10-raku%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0/</link>
      <pubDate>Sat, 10 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-10-raku%E4%B8%AD%E7%9A%84%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0/</guid>
      <description>Raku 中的函数（和类方法）能够接受命名参数。最简单的方法是用箭头分隔名称和值：</description>
    </item>
    
    <item>
      <title>Raku Grammar 中的冒号对儿</title>
      <link>https://ohmysummer.github.io/post/2018-02-08-raku-grammar%E4%B8%AD%E7%9A%84%E5%86%92%E5%8F%B7%E5%AF%B9%E5%84%BF/</link>
      <pubDate>Thu, 08 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-08-raku-grammar%E4%B8%AD%E7%9A%84%E5%86%92%E5%8F%B7%E5%AF%B9%E5%84%BF/</guid>
      <description>欢迎来到这个系列的第 50 篇文章!</description>
    </item>
    
    <item>
      <title>Raku 中的数据类型 Bag</title>
      <link>https://ohmysummer.github.io/post/2018-02-07-raku%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bbag/</link>
      <pubDate>Wed, 07 Feb 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-07-raku%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8Bbag/</guid>
      <description>数据类型 Bag 是一种 Perl 5 中没有的新的数据类型。</description>
    </item>
    
    <item>
      <title>Raku Core Hacking: QASTalicious</title>
      <link>https://ohmysummer.github.io/post/2018-01-28-raku-core-hacking-qastalicious/</link>
      <pubDate>Sun, 28 Jan 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-01-28-raku-core-hacking-qastalicious/</guid>
      <description>在过去的一个月中，我在 Rakudo 的 QAST 地区花了一些时间写了一些优化，修复了包含警告的错误，并且用一个单一的提交压缩了一个10个thunk范围的bug的怪物蜂巢。 在今天的文章中，我们将详细介绍最后一个专长，以及了解QAST是什么以及如何使用它。</description>
    </item>
    
    <item>
      <title>Raku logo</title>
      <link>https://ohmysummer.github.io/post/2018-01-28-perl-6-logo/</link>
      <pubDate>Sun, 28 Jan 2018 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-01-28-perl-6-logo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>第二十五天-圣诞奖金 - 并发HTTP服务器实施和scripter的方法</title>
      <link>https://ohmysummer.github.io/post/2017-12-25-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%A4%A9-%E5%B9%B6%E5%8F%91http%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/</link>
      <pubDate>Mon, 25 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-25-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%A4%A9-%E5%B9%B6%E5%8F%91http%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%9E%E7%8E%B0/</guid>
      <description>Bonus Xmas – Concurrent HTTP Server implementation and the scripter’s approach 首先，我想强调 Jonathan Worthington 在 Rakudo Raku 和 IO::Socket::Async 中的工作。谢谢 Jon！</description>
    </item>
    
    <item>
      <title>第二十四天-解魔方</title>
      <link>https://ohmysummer.github.io/post/2017-12-24-%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%A4%A9-%E8%A7%A3%E9%AD%94%E6%96%B9/</link>
      <pubDate>Sun, 24 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-24-%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%A4%A9-%E8%A7%A3%E9%AD%94%E6%96%B9/</guid>
      <description>Day 24 – Solving a Rubik’s Cube 介绍 我在圣诞节的愿望清单上有一个速度魔方，我真的很兴奋。 :)我想分享一些Raku代码的热情。</description>
    </item>
    
    <item>
      <title>Playing with the code of Rakudo Raku</title>
      <link>https://ohmysummer.github.io/post/2017-12-23-playing-with-the-code-of-raku/</link>
      <pubDate>Sat, 23 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-23-playing-with-the-code-of-raku/</guid>
      <description>昨天，我们查看了返回字符串的 Bool 类的两个方法。函数产生的字符串表示在源代码中被硬编码。</description>
    </item>
    
    <item>
      <title>第二十三天-Raku 高尔夫</title>
      <link>https://ohmysummer.github.io/post/2017-12-23-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%A4%A9-raku-6%E9%AB%98%E5%B0%94%E5%A4%AB/</link>
      <pubDate>Sat, 23 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-23-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%A4%A9-raku-6%E9%AB%98%E5%B0%94%E5%A4%AB/</guid>
      <description>Day 23 – The Wonders of Raku Golf 啊，圣诞节！还有什么比和你的朋友与家人一起坐在桌子旁边玩高尔夫球代码还好呢！ &amp;hellip;等等，什么？</description>
    </item>
    
    <item>
      <title>Exploring the Bool type in Raku, part 1</title>
      <link>https://ohmysummer.github.io/post/2017-12-22-exploring-the-bool-type-in-raku-part-1/</link>
      <pubDate>Fri, 22 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-22-exploring-the-bool-type-in-raku-part-1/</guid>
      <description>今天，我们将使用 GitHub 上提供的 Rakudo 源代码挖掘 Bool 类型的内部。</description>
    </item>
    
    <item>
      <title>第二十二天-Raku.d 的特性</title>
      <link>https://ohmysummer.github.io/post/2017-12-22-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%A4%A9-raku-6.d%E7%9A%84%E7%89%B9%E6%80%A7/</link>
      <pubDate>Fri, 22 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-22-%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%A4%A9-raku-6.d%E7%9A%84%E7%89%B9%E6%80%A7/</guid>
      <description>Day 22 – Features of Raku.</description>
    </item>
    
    <item>
      <title>Raku 中的 proto 关键字</title>
      <link>https://ohmysummer.github.io/post/2017-12-21-raku-%E4%B8%AD%E7%9A%84-proto-%E5%85%B3%E9%94%AE%E5%AD%97/</link>
      <pubDate>Thu, 21 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-21-raku-%E4%B8%AD%E7%9A%84-proto-%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
      <description>今天，我们正在关注 proto 关键字。它向编译器提供了关于你打算创建 multi-subs 的提示。</description>
    </item>
    
    <item>
      <title>第二十天-宏的进阶</title>
      <link>https://ohmysummer.github.io/post/2017-12-20-%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%A4%A9-%E5%AE%8F%E7%9A%84%E8%BF%9B%E9%98%B6/</link>
      <pubDate>Wed, 20 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-20-%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%A4%A9-%E5%AE%8F%E7%9A%84%E8%BF%9B%E9%98%B6/</guid>
      <description>Day 20: Advancements in Macrotechnologies 你好！</description>
    </item>
    
    <item>
      <title>第十八天-Raku 支持的工作流</title>
      <link>https://ohmysummer.github.io/post/2017-12-18-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%A4%A9-raku%E6%94%AF%E6%8C%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
      <pubDate>Mon, 18 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-18-%E7%AC%AC%E5%8D%81%E5%85%AB%E5%A4%A9-raku%E6%94%AF%E6%8C%81%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
      <description>Day 18: Raku powered work flow 保持流畅的编码可能是一个挑战。分心和讨厌的句法错误是潜在的流量瓶颈。</description>
    </item>
    
    <item>
      <title>第十七天-关于消息传递</title>
      <link>https://ohmysummer.github.io/post/2017-12-17-%E7%AC%AC%E5%8D%81%E4%B8%83%E5%A4%A9-%E5%85%B3%E4%BA%8E%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/</link>
      <pubDate>Sun, 17 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-17-%E7%AC%AC%E5%8D%81%E4%B8%83%E5%A4%A9-%E5%85%B3%E4%BA%8E%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92/</guid>
      <description>Day 17: Something about messaging (but I couldn’t think of a snappier title.</description>
    </item>
    
    <item>
      <title>第十六天-Raku 性能改进</title>
      <link>https://ohmysummer.github.io/post/2017-12-16-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%A4%A9-raku%E6%80%A7%E8%83%BD%E6%94%B9%E8%BF%9B/</link>
      <pubDate>Sat, 16 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-16-%E7%AC%AC%E5%8D%81%E5%85%AD%E5%A4%A9-raku%E6%80%A7%E8%83%BD%E6%94%B9%E8%BF%9B/</guid>
      <description>Day 16 – 🎶 Deck The Halls With Perf Improvements 🎶 在英国，我们缺乏感恩节给圣诞节带来了新的一年，感谢和反思。为此，我想围绕Raku性能的状态放置一些我已经坐了一段时间的零碎片断，这些片断强调了这个过程需要付出多少努力。我不确定更广泛的编程社区对正在发生的努力的速度和数量表示赞赏。</description>
    </item>
    
    <item>
      <title>第十五天-带有 Promise 的简单网络爬虫</title>
      <link>https://ohmysummer.github.io/post/2017-12-15-%E7%AC%AC%E5%8D%81%E4%BA%94%E5%A4%A9-%E5%B8%A6%E6%9C%89promise%E7%9A%84%E7%AE%80%E5%8D%95%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</link>
      <pubDate>Fri, 15 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-15-%E7%AC%AC%E5%8D%81%E4%BA%94%E5%A4%A9-%E5%B8%A6%E6%9C%89promise%E7%9A%84%E7%AE%80%E5%8D%95%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB/</guid>
      <description>Day 15 – A Simple Web Spider With Promises 承诺，承诺 去年夏天，我申请了一项编程工作，面试官要求我编写一个程序来抓取给定的域，只在该域中的链接之后，找到它引用的所有页面。我被允许以任何语言编写程序，但我选择使用Go语言执行任务，因为这是该公司使用的主要语言。这对于并发编程来说是一个理想的任务，并且Go具有非常好的现代化功能，即使有些低级别的并发支持。网络蜘蛛中的主要工作是执行与在域中发现的唯一锚链接相同的次数，即在每个页面上执行HTTP GET并解析页面文本以获取新链接。这个任务可以并行安全地完成，因为没有可能（除非你做得很糟糕），任何调用爬取代码都会干扰其他任何调用。</description>
    </item>
    
    <item>
      <title>第十四天-在 Raku 中构建和测试 Big Grammars</title>
      <link>https://ohmysummer.github.io/post/2017-12-14-%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%A4%A9-%E5%9C%A8raku%E4%B8%AD%E6%9E%84%E5%BB%BA%E5%92%8C%E6%B5%8B%E8%AF%95%E5%A4%A7grammars/</link>
      <pubDate>Thu, 14 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-14-%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%A4%A9-%E5%9C%A8raku%E4%B8%AD%E6%9E%84%E5%BB%BA%E5%92%8C%E6%B5%8B%E8%AF%95%E5%A4%A7grammars/</guid>
      <description>The Little Match Girl: Building and Testing Big Grammars in Raku Raku Grammars 很棒，但在项目中使用它们会是什么样呢？在圣诞节前和圣诞节后，我的经历是一个令人心酸的故事。你可以在这里找到版本库。我不是来自计算机科学背景，所以也许它看起来很简陋，但是当我学习 Raku Grammars 时，这是我的困难和胜利。</description>
    </item>
    
    <item>
      <title>第十三天 - 使用 Raku 挖掘维基百科</title>
      <link>https://ohmysummer.github.io/post/2017-12-13-%E7%AC%AC%E5%8D%81%E4%B8%89%E5%A4%A9-%E4%BD%BF%E7%94%A8-raku-%E6%8C%96%E6%8E%98%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/</link>
      <pubDate>Wed, 13 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-13-%E7%AC%AC%E5%8D%81%E4%B8%89%E5%A4%A9-%E4%BD%BF%E7%94%A8-raku-%E6%8C%96%E6%8E%98%E7%BB%B4%E5%9F%BA%E7%99%BE%E7%A7%91/</guid>
      <description>介绍 大家好!</description>
    </item>
    
    <item>
      <title>第十二天 – The Year of Raku Books</title>
      <link>https://ohmysummer.github.io/post/2017-12-12-%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%A4%A9the-year-of-raku-books/</link>
      <pubDate>Tue, 12 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-12-%E7%AC%AC%E5%8D%81%E4%BA%8C%E5%A4%A9the-year-of-raku-books/</guid>
      <description>https://rakuadvent.wordpress.com/2017/12/12/day-12-the-year-of-perl-6-books/</description>
    </item>
    
    <item>
      <title>第十天 – Wrapping Rats</title>
      <link>https://ohmysummer.github.io/post/2017-12-10-%E7%AC%AC%E5%8D%81%E5%A4%A9wrapping-rats/</link>
      <pubDate>Sun, 10 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-10-%E7%AC%AC%E5%8D%81%E5%A4%A9wrapping-rats/</guid>
      <description>Day 10 – Wrapping Rats 沿着烟囱向下是一件危险的事情。</description>
    </item>
    
    <item>
      <title>第九天 – HTTP and Web Sockets with Cro</title>
      <link>https://ohmysummer.github.io/post/2017-12-09-%E7%AC%AC%E4%B9%9D%E5%A4%A9http-and-web-sockets-with-cro/</link>
      <pubDate>Sat, 09 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-09-%E7%AC%AC%E4%B9%9D%E5%A4%A9http-and-web-sockets-with-cro/</guid>
      <description>Day 9 – HTTP and Web Sockets with Cro 礼物不仅仅是圣诞节的时候才有。今年夏天，在瑞士 Perl 工作室 - 精美地坐落在阿尔卑斯山 - 我有幸透露了 Cro。 Cro 是一组用于在 Raku 中构建服务的库，以及一些用于 stub，run 和跟踪服务的开发工具。 Cro 主要关注使用 HTTP（包括HTTP/2.</description>
    </item>
    
    <item>
      <title>第八天 – Adventures in NQP Land: Hacking the Rakudo Compiler</title>
      <link>https://ohmysummer.github.io/post/2017-12-08-%E7%AC%AC%E5%85%AB%E5%A4%A9adventures-in-nqp-land-hacking-the-rakudo-compiler/</link>
      <pubDate>Fri, 08 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-08-%E7%AC%AC%E5%85%AB%E5%A4%A9adventures-in-nqp-land-hacking-the-rakudo-compiler/</guid>
      <description>Day 8 – Adventures in NQP Land: Hacking the Rakudo Compiler/ 对旧圣诞节经典“圣诞节十二天”的道歉，我给你一个 Raku 版本的第一行：</description>
    </item>
    
    <item>
      <title>第七天 – Test All The Things</title>
      <link>https://ohmysummer.github.io/post/2017-12-07-%E7%AC%AC%E4%B8%83%E5%A4%A9test-all-the-things/</link>
      <pubDate>Thu, 07 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-07-%E7%AC%AC%E4%B8%83%E5%A4%A9test-all-the-things/</guid>
      <description>https://rakuadvent.wordpress.com/2017/12/07/day-7-test-all-the-things/</description>
    </item>
    
    <item>
      <title>第六天-Raku 书评</title>
      <link>https://ohmysummer.github.io/post/2017-12-06-%E7%AC%AC%E5%85%AD%E5%A4%A9-raku-%E4%B9%A6%E8%AF%84/</link>
      <pubDate>Wed, 06 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-06-%E7%AC%AC%E5%85%AD%E5%A4%A9-raku-%E4%B9%A6%E8%AF%84/</guid>
      <description>https://rakuadvent.wordpress.com/2017/12/06/</description>
    </item>
    
    <item>
      <title>第三天 – LetterOps with Raku</title>
      <link>https://ohmysummer.github.io/post/2017-12-03-%E7%AC%AC%E4%B8%89%E5%A4%A9letterops-with-raku/</link>
      <pubDate>Sun, 03 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-03-%E7%AC%AC%E4%B8%89%E5%A4%A9letterops-with-raku/</guid>
      <description>Day 3 – LetterOps with Raku 规模 “规模！规模就是一切！“。</description>
    </item>
    
    <item>
      <title>第二天-Raku: 符号, 变量和容器</title>
      <link>https://ohmysummer.github.io/post/2017-12-02-%E7%AC%AC%E4%BA%8C%E5%A4%A9-raku%E4%B8%AD%E7%9A%84%E7%AC%A6%E5%8F%B7%E5%8F%98%E9%87%8F%E5%92%8C%E5%AE%B9%E5%99%A8/</link>
      <pubDate>Sat, 02 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-02-%E7%AC%AC%E4%BA%8C%E5%A4%A9-raku%E4%B8%AD%E7%9A%84%E7%AC%A6%E5%8F%B7%E5%8F%98%E9%87%8F%E5%92%8C%E5%AE%B9%E5%99%A8/</guid>
      <description>第二天-Raku: 符号, 变量和容器 对容器的基本理解对于在 Raku 中进行愉快的编程是至关重要的。它们无处不在，不仅影响你获得的变量类型，还决定了 List 和 Map 在迭代时的行为方式。</description>
    </item>
    
    <item>
      <title>第一天 – Raku 鬼精灵: 圣诞节实用指南</title>
      <link>https://ohmysummer.github.io/post/2017-12-01-%E7%AC%AC%E4%B8%80%E5%A4%A9-raku%E9%AC%BC%E7%B2%BE%E7%81%B5-%E5%9C%A3%E8%AF%9E%E8%8A%82%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Fri, 01 Dec 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-12-01-%E7%AC%AC%E4%B8%80%E5%A4%A9-raku%E9%AC%BC%E7%B2%BE%E7%81%B5-%E5%9C%A3%E8%AF%9E%E8%8A%82%E5%AE%9E%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>第一天 – Raku 鬼精灵: 圣诞节实用指南 看看他们！同事、朋友和亲近的家人都在开心地笑着。他们都在享受着使用 Raku 的 6.</description>
    </item>
    
    <item>
      <title>根据select结果生成insert语句</title>
      <link>https://ohmysummer.github.io/post/2017-09-16-%E6%A0%B9%E6%8D%AEselect%E7%BB%93%E6%9E%9C%E7%94%9F%E6%88%90insert%E8%AF%AD%E5%8F%A5/</link>
      <pubDate>Sat, 16 Sep 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-09-16-%E6%A0%B9%E6%8D%AEselect%E7%BB%93%E6%9E%9C%E7%94%9F%E6%88%90insert%E8%AF%AD%E5%8F%A5/</guid>
      <description>想根据 MySQL select 语句的结果生成 insert 语句。</description>
    </item>
    
    <item>
      <title>开启 Disqus 评论</title>
      <link>https://ohmysummer.github.io/post/2017-09-15-%E5%BC%80%E5%90%AFdisqus%E8%AF%84%E8%AE%BA/</link>
      <pubDate>Fri, 15 Sep 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-09-15-%E5%BC%80%E5%90%AFdisqus%E8%AF%84%E8%AE%BA/</guid>
      <description>要开启 Disqus 评论, 需要先在 Disqus 官网注册账号, 获得 disqusShortname。</description>
    </item>
    
    <item>
      <title>Raku Sheet</title>
      <link>https://ohmysummer.github.io/post/2017-05-19-sheet/</link>
      <pubDate>Fri, 19 May 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-05-19-sheet/</guid>
      <description>正则表达式 Raku 的正则表达式允许你为你自定义的字符类混进 Unicode 属性！</description>
    </item>
    
    <item>
      <title>4 种风格的模板引擎</title>
      <link>https://ohmysummer.github.io/post/2017-03-04-4%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E/</link>
      <pubDate>Sat, 04 Mar 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-03-04-4%E7%A7%8D%E9%A3%8E%E6%A0%BC%E7%9A%84%E6%A8%A1%E6%9D%BF%E5%BC%95%E6%93%8E/</guid>
      <description>4 种风格的模板引擎.</description>
    </item>
    
    <item>
      <title>Raku From Ruby - Nutshell</title>
      <link>https://ohmysummer.github.io/post/2016-10-17-rakufromruby/</link>
      <pubDate>Mon, 17 Oct 2016 17:55:34 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-10-17-rakufromruby/</guid>
      <description>Raku from Ruby - Nutshell</description>
    </item>
    
    <item>
      <title>在手机中运行 Raku</title>
      <link>https://ohmysummer.github.io/post/2016-10-14-%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%AD%E8%BF%90%E8%A1%8Craku/</link>
      <pubDate>Fri, 14 Oct 2016 11:15:24 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-10-14-%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%AD%E8%BF%90%E8%A1%8Craku/</guid>
      <description>准备工作  一只 Root 过的安卓智能手机(例如 Smartisan T1) 下载并安装 busybox.</description>
    </item>
    
    <item>
      <title>Raku from Haskell - Nutshell</title>
      <link>https://ohmysummer.github.io/post/2017-04-29-raku-from-haskell-nutshell/</link>
      <pubDate>Fri, 11 Jul 2014 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-04-29-raku-from-haskell-nutshell/</guid>
      <description>Haskell 和 Raku 是非常不同的语言。这很明显。 但是，这并不意味着没有相似之处或共同的想法！ 此页面尝试让一个 Haskell 用户启动并运行 Raku。Haskell 用户可能会发现，在用 Raku 编写脚本时，他们不需要放弃所有 Haskelly 的想法。</description>
    </item>
    
    <item>
      <title>Raku Grammars, Part 1</title>
      <link>https://ohmysummer.github.io/post/2018-02-13-raku-grammers-part-1/</link>
      <pubDate>Fri, 11 Jul 2014 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2018-02-13-raku-grammers-part-1/</guid>
      <description>Raku Grammars, Part 1 Raku 语言内置了对 grammar 的支持。您可以将 grammars 视为众所周知的正则表达式和诸如 yacc 或 bison 等实用程序或更复杂的 grammar 工具（如ANTLR）的组合。所有这些 - 词法分析器，语法分析器和语义处理 - 通常是编译器的独立部分，在 Raku 中它们都是内置的，并且可以通过全新的 Raku 安装 进行开箱即用。</description>
    </item>
    
  </channel>
</rss>