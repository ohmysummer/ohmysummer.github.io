<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>列表解析 on Raku Programming</title>
    <link>https://ohmysummer.github.io/tags/%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/</link>
    <description>Recent content in 列表解析 on Raku Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 May 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>列表解析</title>
      <link>https://ohmysummer.github.io/post/2016-05-11-%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/</link>
      <pubDate>Wed, 11 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-05-11-%E5%88%97%E8%A1%A8%E8%A7%A3%E6%9E%90/</guid>
      <description>列表解析 列表解析即 List Comprehensions。
生成 1x1, 2x2, 3x3, ..., 10x10 的列表：
($_**2 for 1..10);for 语句前面还可以添加 if 修饰符，这样我们就可以仅筛选出偶数的平方：
($_**2 if !($_ % 2) for 1..10)($_**2 if $_ % 2 == 1 for 1..10) # 同上组合多个 if 条件:
my @list = ($_ if $_ %2 == 1 &amp;amp;&amp;amp; $_ &amp;gt; 2 for 1..6 ) # [3 5] 还可以生成全排列：
($_ for &amp;quot;ABC&amp;quot;.comb X~ &amp;quot;XYZ&amp;quot;.comb) # (&amp;quot;AX&amp;quot;, &amp;quot;AY&amp;quot;, &amp;quot;AZ&amp;quot;, &amp;quot;BX&amp;quot;, &amp;quot;BY&amp;quot;, &amp;quot;BZ&amp;quot;, &amp;quot;CX&amp;quot;, &amp;quot;CY&amp;quot;, &amp;quot;CZ&amp;quot;)my @a = (1,3,4) my @b = (2,4,6) my @list = (@a X @b) # 这儿也可以用圆括号, 也可以不用 # [(1 2) (1 4) (1 6) (3 2) (3 4) (3 6) (4 2) (4 4) (4 6)]&amp;gt; ($_ when /7$/ for 1.</description>
    </item>
    
  </channel>
</rss>