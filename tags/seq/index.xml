<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Seq on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/seq/</link>
    <description>Recent content in Seq on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 31 Jul 2017 10:54:24 +0200</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/seq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Seq 和摇滚</title>
      <link>https://ohmysummer.github.io/post/2017-07-31-seq%E5%92%8C%E6%91%87%E6%BB%9A/</link>
      <pubDate>Mon, 31 Jul 2017 10:54:24 +0200</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2017-07-31-seq%E5%92%8C%E6%91%87%E6%BB%9A/</guid>
      <description>这是这个系列的第二部分！请确保你已经阅读过第一部分, 在那里我们讨论了什么是 Seq, 并且怎么来缓存它们。
今天, 我们把 Seq 单独拎出来, 看看里面到底有什么; 是什么驱动的它; 并且怎样让它实现我们的想法。
第二部分: 快速迭代 使 Seq 做事情的主要部分是遵循 Iterator 角色的对象。 这个对象知道如何生成下一个值，什么时候从 Seq 中提取一个值，或者将其所有值推送到某个地方，或者简单地丢弃所有剩余的值。
请记住，当使用 Seq 作为值的来源时，您不需要直接使用 Iterator 的方法。 它们被间接称为各种 Perl 6 结构。 自己调用这些方法的场景通常是我们制作一个由另一个 Iterator 提供的迭代器的时候，就像我们会看到的那样。
Pull my finger 在最基本的形式中, 一个 Iterator 对象需要提供的只有一个方法: .pull-one
my $seq := Seq.new: class :: does Iterator { method pull-one { return $++ if $++ &amp;lt; 4; IterationEnd } }.new; .say for $seq;  输出:
# OUTPUT: # 0 # 1 # 2 # 3  上面的例子中, 我们使用 Seq 的 .</description>
    </item>
    
    <item>
      <title>S07-Lists</title>
      <link>https://ohmysummer.github.io/post/2016-02-12-s07-lists/</link>
      <pubDate>Fri, 12 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-02-12-s07-lists/</guid>
      <description>push 和 append 的表现不同, push 一次只添加单个参数到列表末端, append 一次可以添加多个参数。
use v6; my @d = ( [ 1 .. 3 ] ); @d.push( [ 4 .. 6 ] ); @d.push( [ 7 .. 9 ] ); for @d -&amp;gt; $r { say &amp;quot;$r[]&amp;quot;; } # 1 # 2 # 3 # 4 5 6 # 7 8 9 for @d -&amp;gt; $r { say $r.WHAT() } # (Int) # (Int) # (Int) # (Array) 整个数组作为单个参数 # (Array) say @d.</description>
    </item>
    
  </channel>
</rss>