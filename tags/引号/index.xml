<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>引号 on Young For Perl 6</title>
    <link>https://ohmysummer.github.io/tags/%E5%BC%95%E5%8F%B7/</link>
    <description>Recent content in 引号 on Young For Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 24 Aug 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/%E5%BC%95%E5%8F%B7/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perl 6 中的引号</title>
      <link>https://ohmysummer.github.io/post/2015-08-24-perl6%E4%B8%AD%E7%9A%84%E5%BC%95%E5%8F%B7/</link>
      <pubDate>Mon, 24 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2015-08-24-perl6%E4%B8%AD%E7%9A%84%E5%BC%95%E5%8F%B7/</guid>
      <description>除了 q 和 qq 之外，现在还有一种基本形式的 Q，它不会进行插值，除非显式地修改它那样做。所以，q 实际上是 Q:q 的简称，qq 实际上是 Q:qq 的简称。实际上所有的 quote-like 形式都派生自带有副词的 Q 形式：
S02-literals/quoting.t lines 95–116 S02-literals/quoting.t lines 132–139
q// Q :q // qq// Q :qq // rx// Q :regex // s/// Q :subst /// tr/// Q :trans ///  诸如 :regex 的副词通过转换到不同的解析器改变了语言的解析。这能完全改变任何之后的副词还有所引起的东西自身的解释。
q:s// Q :q :scalar // rx:s// Q :regex :scalar //  就像 q[...] 拥有简写形式的 &amp;lsquo;&amp;hellip;&amp;rsquo;, 并且 qq[...] 拥有简写形式的 &amp;ldquo;&amp;hellip;&amp;rdquo; 一样，完整的 Q[...] 引用也有一种使用半角括号 ｢&amp;hellip;｣ 的短形式。</description>
    </item>
    
  </channel>
</rss>