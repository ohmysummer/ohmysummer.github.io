<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Colons on Rakudo Perl 6</title>
    <link>https://ohmysummer.github.io/tags/colons/</link>
    <description>Recent content in Colons on Rakudo Perl 6</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 24 Sep 2016 20:55:11 +0000</lastBuildDate>
    
	<atom:link href="https://ohmysummer.github.io/tags/colons/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raku 中的冒号</title>
      <link>https://ohmysummer.github.io/post/2016-09-24-raku%E4%B8%AD%E7%9A%84%E5%86%92%E5%8F%B7/</link>
      <pubDate>Sat, 24 Sep 2016 20:55:11 +0000</pubDate>
      
      <guid>https://ohmysummer.github.io/post/2016-09-24-raku%E4%B8%AD%E7%9A%84%E5%86%92%E5%8F%B7/</guid>
      <description>Raku Colons 在 Raku 中到处都是冒号, 我搜集了你在 Raku 中使用冒号的所有方式。
Larry 语言再设计第一定律: 每个人都想要冒号 Larry 语言再设计第二定律: Larry 成为冒号
这些都是主题的变体，尤其是“冒号对”语法主题。如果冒号的两种用法看起来不同，或者在不同的用法上下文中不同，即使它们在技术上是相同的，我更愿意说明这两种用法。
命名空间 # namespace package A::B { ... } class A::B { ... } # Namespace separator my $x = A::B.new; # Dynamic namespace my $x = ::(&amp;quot;A::B&amp;quot;).new; # Pseudopackage representing null namespace say ::; # Anonymous class class :: is Int {...} # Current class in a compile-tiem var class Who { method myname { say ::?</description>
    </item>
    
  </channel>
</rss>